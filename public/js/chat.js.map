{"version":3,"sources":["webpack:///webpack/bootstrap d0cba137120ec2a5a256","webpack:///./src/client/app.ts","webpack:///./src/client/ChatClient.ts","webpack:///./src/enum/SocketEvents.ts","webpack:///./src/client/ChatUi.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","ChatClient_1","ChatUi_1","$","ui","default","init","SocketEvents_1","[object Object]","this","socket","io","registerSocketEvents","registerFormEvents","connectFailMsg","content","user","disconnectMsg","on","SocketEvents","CLIENT_CONNECT","namePrompt","emit","NEW_USER","WELCOME","msg","appendBoldText","DISCONNECT","CONNECT_FAILED","USER_CONNECT","appendSimpleMessage","USER_DISCONNECT","MESSAGE","IMAGE","appendImage","CONNECTED_USERS","users","refreshUserList","form","document","getElementById","addEventListener","event","message","value","reset","preventDefault","e","file","files","reader","FileReader","evt","img","result","readAsDataURL","id","element","callback","username","prompt","strong","createElement","span","appendChild","createTextNode","appendMessage","classList","add","src","userList","innerHTML","forEach","chip","scrollTop","scrollHeight","elements","li","scrollDown"],"mappings":"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","file":"chat.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d0cba137120ec2a5a256","import ChatClient from './ChatClient'\nimport ChatUi from './ChatUi'\n\n$('.dropify')['dropify']()\n\nconst ui = new ChatUi('messages')\nconst client = new ChatClient(ui)\nclient.init()\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/app.ts","import IChatUi from './IChatUi'\nimport { SocketEvents } from '../enum/SocketEvents'\n\n/**\n * Chat client class.\n *\n * @author Daniel Peters\n * @version 1.1\n */\nexport default class ChatClient {\n  private ui: IChatUi\n\n  /**\n   * Constructor.\n   *\n   * @param {IChatUi} ui Chat user interface\n   */\n  constructor (ui: IChatUi) {\n    this.ui = ui\n  }\n\n  /**\n   * Initialize all events.\n   */\n  public init (): void {\n    const socket = io()\n    this.registerSocketEvents(socket)\n    this.registerFormEvents(socket)\n  }\n\n  /**\n   * Register all socket.io events.\n   *\n   * @param {SocketIOClient.Socket} socket Socket instance\n   */\n  private registerSocketEvents (socket: SocketIOClient.Socket): void {\n    const connectFailMsg = { content: 'Connection Failed.', user: '' }\n    const disconnectMsg = { content: 'You have been disconnected. Trying to reconnect.', user: '' }\n\n    socket.on(SocketEvents.CLIENT_CONNECT, () => this.ui.namePrompt(name => socket.emit(SocketEvents.NEW_USER, name)))\n    socket.on(SocketEvents.WELCOME, msg => this.ui.appendBoldText(msg))\n    socket.on(SocketEvents.DISCONNECT, () => this.ui.appendBoldText(disconnectMsg))\n    socket.on(SocketEvents.CONNECT_FAILED, () => this.ui.appendBoldText(connectFailMsg))\n    socket.on(SocketEvents.USER_CONNECT, msg => this.ui.appendSimpleMessage(msg))\n    socket.on(SocketEvents.USER_DISCONNECT, msg => this.ui.appendSimpleMessage(msg))\n    socket.on(SocketEvents.MESSAGE, msg => this.ui.appendSimpleMessage(msg))\n    socket.on(SocketEvents.IMAGE, msg => this.ui.appendImage(msg))\n    socket.on(SocketEvents.CONNECTED_USERS, users => this.ui.refreshUserList(users))\n  }\n\n  /**\n   * Register all form submit and change events.\n   *\n   * @param {SocketIOClient.Socket} socket Socket instance\n   */\n  private registerFormEvents (socket: SocketIOClient.Socket): void {\n    const form = document.getElementById('chatForm') as HTMLFormElement\n    form.addEventListener('submit', event => {\n      const message = (document.getElementById('newMessage')as HTMLInputElement).value\n      socket.emit(SocketEvents.MESSAGE, message)\n      form.reset()\n      event.preventDefault()\n    })\n\n    // Waiting for user to submit message\n    document.getElementById('imageSubmit').addEventListener('change', e => {\n      const file = (document.getElementById('image') as HTMLInputElement).files[0]\n      const reader = new FileReader()\n      reader.addEventListener('load', evt => socket.emit(SocketEvents.IMAGE, { img: reader.result }))\n      reader.readAsDataURL(file)\n      e.preventDefault()\n    })\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/ChatClient.ts","/**\n * Socket events enum.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport enum SocketEvents {\n  CONNECTION = 'connection',\n  CLIENT_CONNECT = 'connect',\n  DISCONNECT = 'disconnect',\n  CONNECT_FAILED = 'connect_failed',\n  NEW_USER = 'new-user',\n  WELCOME = 'welcome',\n  USER_CONNECT = 'user-connect',\n  USER_DISCONNECT = 'user-disconnect',\n  CONNECTED_USERS = 'connected-users',\n  MESSAGE = 'message',\n  IMAGE = 'image'\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/enum/SocketEvents.ts","import IChatUi from './IChatUi'\nimport IChatMessage from './IChatMessage'\nimport IUser from './IUser'\n\n/**\n * Chat ui implementation class.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class ChatUi implements IChatUi {\n  private element: HTMLDivElement\n\n  /**\n   * Constructor.\n   *\n   * @param {string} id ID of the chat display element\n   */\n  constructor (id: string) {\n    this.element = document.getElementById(id) as HTMLDivElement\n  }\n\n  /**\n   * Get username using a prompt. Waits until user submits a valid username.\n   *\n   * @param {(name: string) => void} callback\n   */\n  public namePrompt (callback: (name: string) => void): void {\n    let username = ''\n\n    do {\n      username = prompt('What\\'s your username?')\n    } while (username === '' || username === null || username === undefined)\n\n    callback(username)\n  }\n\n  /**\n   *\n   * @param {IChatMessage} msg\n   */\n  public appendSimpleMessage (msg: IChatMessage): void {\n    const strong = document.createElement('strong')\n    const span = document.createElement('span')\n    strong.appendChild(document.createTextNode(msg.user))\n    span.appendChild(document.createTextNode(msg.content))\n    this.appendMessage([strong, span])\n  }\n\n  /**\n   *\n   * @param {IChatMessage} msg\n   */\n  public appendBoldText (msg: IChatMessage): void {\n    const strong = document.createElement('strong')\n    strong.appendChild(document.createTextNode(msg.content))\n    this.appendMessage([strong])\n  }\n\n  /**\n   *\n   * @param {IChatMessage} msg\n   */\n  public appendImage (msg: IChatMessage): void {\n    const strong = document.createElement('strong')\n    const span = document.createElement('span')\n    const img = document.createElement('img')\n    img.classList.add('responsive-img')\n    img.src = msg.content\n    strong.appendChild(document.createTextNode(msg.user))\n    span.appendChild(document.createTextNode(': '))\n    this.appendMessage([strong, span, img])\n  }\n\n  /**\n   *\n   * @param {IUser[]} users\n   */\n  public refreshUserList (users: IUser[]): void {\n    const userList = document.getElementById('userList')\n    userList.innerHTML = ''\n    users.forEach(user => {\n      const chip = document.createElement('div')\n      chip.classList.add('chip')\n      chip.appendChild(document.createTextNode(user.name))\n      userList.appendChild(chip)\n    })\n  }\n\n  /**\n   * Scroll to the bottom of the chat.\n   */\n  private scrollDown (): void {\n    this.element.scrollTop = this.element.scrollHeight\n  }\n\n  /**\n   * Append an item to the messages collection.\n   *\n   * @param {HTMLElement[]} elements\n   */\n  private appendMessage (elements: HTMLElement[]): void {\n    let li = document.createElement('li')\n    li.classList.add('collection-item')\n    elements.forEach(element => li.appendChild(element))\n    this.element.appendChild(li)\n    this.scrollDown()\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/ChatUi.ts"],"sourceRoot":""}